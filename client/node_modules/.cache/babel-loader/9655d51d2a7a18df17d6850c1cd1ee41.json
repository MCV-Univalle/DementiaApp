{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\"; //Persist storage\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nvar initialState = {};\nvar middleware = [thunk];\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n\n};\nvar pReducer = persistReducer(persistConfig, rootReducer);\nvar store = createStore(pReducer, initialState, compose(applyMiddleware.apply(void 0, middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose));\nvar persistor = persistStore(store);\nexport { persistor, store };","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/store.js"],"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","autoMergeLevel2","thunk","rootReducer","initialState","middleware","persistConfig","key","stateReconciler","pReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CACA;;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAGA,IAAMI,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBP,EAAAA,OAAO,EAAEA,OAFW;AAGpBQ,EAAAA,eAAe,EAAEP,eAHG,CAGa;;AAHb,CAAtB;AAMC,IAAMQ,QAAQ,GAAGV,cAAc,CAACO,aAAD,EAAgBH,WAAhB,CAA/B;AAGD,IAAMO,KAAK,GAAGf,WAAW,CACvBc,QADuB,EAEvBL,YAFuB,EAGvBP,OAAO,CACLD,eAAe,MAAf,SAAmBS,UAAnB,CADK,EAEJM,MAAM,CAACC,4BAAP,IACGD,MAAM,CAACC,4BAAP,EADJ,IAEIf,OAJC,CAHgB,CAAzB;AAWA,IAAMgB,SAAS,GAAGf,YAAY,CAACY,KAAD,CAA9B;AAEA,SAAQG,SAAR,EAAmBH,KAAnB","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\n//Persist storage\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n };\n\n const pReducer = persistReducer(persistConfig, rootReducer);\n\n\nconst store = createStore(\n  pReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()) ||\n        compose \n  )\n);\n\nconst persistor = persistStore(store);\n\nexport {persistor, store}"]},"metadata":{},"sourceType":"module"}
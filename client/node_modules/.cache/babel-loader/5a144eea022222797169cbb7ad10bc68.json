{"ast":null,"code":"import _extends from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/components/Header/HeaderLinks.jsx\";\n\n/*eslint-disable*/\nimport React, { useCallback } from \"react\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined'; // react components for routing our app without refresh\n\nimport { Link } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\"; // core components\n\nimport CustomDropdown from \"components/CustomDropdown/CustomDropdown.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport headerLinksStyle from \"assets/jss/material-kit-react/components/headerLinksStyle.jsx\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; //React router for wrapping the page\n\nimport { withRouter } from \"react-router-dom\"; //Function to loggout user from memento \n\nimport { logoutUser } from \"../../actions/authActions\";\n\nfunction HeaderLinks(_ref) {\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      completed = props.completed;\n  var handleClick = useCallback(function () {\n    props.logoutUser();\n  });\n\n  if (completed) {\n    return React.createElement(List, {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      component: Link,\n      to: \"/profile-page\",\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"transparent\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FaceOutlinedIcon, {\n      className: classes.icons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \"Mi perfil\")), React.createElement(ListItem, {\n      button: true,\n      component: Link,\n      to: \"/activities-page\",\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"transparent\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(PlayCircleOutlineIcon, {\n      className: classes.icons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \" Iniciar terapia\")), React.createElement(ListItem, {\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CustomDropdown, {\n      noLiPadding: true,\n      buttonText: \"Nuevo\",\n      buttonProps: {\n        className: classes.navLink,\n        color: \"transparent\"\n      },\n      buttonIcon: AddIcon,\n      dropdownList: [React.createElement(Link, {\n        to: \"/familiarUpload-page\",\n        className: classes.dropdownLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Agregar familiar\"), React.createElement(Link, {\n        to: \"/albumUpload-page\",\n        className: classes.dropdownLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Agregar album\"), React.createElement(Link, {\n        to: \"/\",\n        className: classes.dropdownLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Agregar pregunta\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(CustomDropdown, {\n      noLiPadding: true,\n      buttonText: \"Informaci\\xF3n\",\n      buttonProps: {\n        className: classes.navLink,\n        color: \"transparent\"\n      },\n      buttonIcon: InfoIcon,\n      dropdownList: [React.createElement(Link, {\n        to: \"/questions-page\",\n        className: classes.dropdownLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Informaci\\xF3n b\\xE1sica\"), React.createElement(Link, {\n        to: \"/albumUpload-page\",\n        className: classes.dropdownLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Informaci\\xF3n familiar\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"transparent\",\n      target: \"_blank\",\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(PlayCircleOutlineIcon, {\n      className: classes.icons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \"Salir\")));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  });\n}\n\nHeaderLinks.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser: logoutUser\n})(withStyles(headerLinksStyle)(withRouter(HeaderLinks)));","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/components/Header/HeaderLinks.jsx"],"names":["React","useCallback","InfoIcon","PlayCircleOutlineIcon","AddIcon","FaceOutlinedIcon","Link","withStyles","List","ListItem","CustomDropdown","Button","headerLinksStyle","PropTypes","connect","withRouter","logoutUser","HeaderLinks","props","classes","completed","handleClick","list","listItem","icons","className","navLink","color","dropdownLink","propTypes","auth","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React, { useCallback } from \"react\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined';\n\n// react components for routing our app without refresh\nimport { Link } from \"react-router-dom\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\n// core components\nimport CustomDropdown from \"components/CustomDropdown/CustomDropdown.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport headerLinksStyle from \"assets/jss/material-kit-react/components/headerLinksStyle.jsx\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n//React router for wrapping the page\nimport { withRouter } from \"react-router-dom\";\n\n//Function to loggout user from memento \nimport { logoutUser } from \"../../actions/authActions\";\n\n\nfunction HeaderLinks({ ...props }) {\n  const { classes, completed } = props;\n\n  const handleClick = useCallback(() => {\n    props.logoutUser();\n  })\n\n  if(completed){\n\n    return (<List className={classes.list}>\n      <ListItem button component={Link} to=\"/profile-page\" className={classes.listItem}>\n          <Button\n            color=\"transparent\"\n            target=\"_blank\"\n          >\n            <FaceOutlinedIcon \n            className={classes.icons} /> \n            Mi perfil\n          </Button>\n        </ListItem>\n\n\n      <ListItem button component={Link} to=\"/activities-page\" className={classes.listItem}>\n          <Button\n            color=\"transparent\"\n            target=\"_blank\"\n          >\n            <PlayCircleOutlineIcon className={classes.icons} /> Iniciar terapia\n          </Button>\n        </ListItem>\n  \n  \n        <ListItem className={classes.listItem}>\n          <CustomDropdown\n            noLiPadding\n            buttonText=\"Nuevo\"\n            buttonProps={{\n              className: classes.navLink,\n              color: \"transparent\"\n            }}\n            buttonIcon={AddIcon}\n            dropdownList={[\n              <Link to=\"/familiarUpload-page\" className={classes.dropdownLink}>\n                Agregar familiar\n              </Link>,\n              <Link to=\"/albumUpload-page\" className={classes.dropdownLink}>\n                Agregar album\n              </Link>,\n              <Link to=\"/\" className={classes.dropdownLink}>\n                Agregar pregunta\n              </Link>\n              \n            ]}\n          />\n        </ListItem>\n\n        <ListItem className={classes.listItem}>\n          <CustomDropdown\n            noLiPadding\n            buttonText=\"Información\"\n            buttonProps={{\n              className: classes.navLink,\n              color: \"transparent\"\n            }}\n            buttonIcon={InfoIcon}\n            dropdownList={[\n              <Link to=\"/questions-page\" className={classes.dropdownLink}>\n                Información básica\n              </Link>,\n              <Link to=\"/albumUpload-page\" className={classes.dropdownLink}>\n                Información familiar\n              </Link>\n              \n            ]}\n          />\n        \n        \n        </ListItem>\n\n        \n\n        <ListItem button className={classes.listItem}>\n          <Button\n            color=\"transparent\"\n            target=\"_blank\"\n            onClick={handleClick}\n          >\n            <PlayCircleOutlineIcon \n            className={classes.icons} /> \n            Salir\n          </Button>\n        </ListItem>\n        </List>\n          );\n          }\n     \n    return <div></div>;\n}\n\nHeaderLinks.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(\n  mapStateToProps,\n  {logoutUser}) (withStyles(headerLinksStyle)(withRouter(HeaderLinks)));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var AffectiveRelation = require('../models/affectiveRelation.model');\n\nvar SessionTherapy = require('../models/sessionTherapy.model');\n\nvar Question = require('../models/question.model');\n\nvar User = require('../models/user.model');\n\nvar service = require('../services/jwt.service');\n\nvar bcrypt = require('bcrypt'); //Input validator\n\n\nvar validateRegisterInput = require('../validators/register');\n\nvar validateLoginInput = require('../validators/login');\n\nexports.create = function (req, res) {\n  var _validateRegisterInpu = validateRegisterInput(req.body),\n      errors = _validateRegisterInpu.errors,\n      isValid = _validateRegisterInpu.isValid; //Check validation\n\n\n  if (!isValid) {\n    return res.status(400).json(errors);\n  }\n\n  User.findOne({\n    cc: req.body.cc\n  }).then(function (user) {\n    if (!user) {\n      var _user = new User({\n        name: req.body.name,\n        last_name: req.body.last_name,\n        password: req.body.password,\n        cc: req.body.cc,\n        dementia_stage: req.body.dementia_stage,\n        adress: req.body.adress,\n        birthdate: req.body.birthdate\n      });\n\n      _user.save(function (err) {\n        if (err) {\n          return res.status(500).send({\n            message: \"Error creating the user \".concat(err)\n          });\n        } //Send the token create for the user\n\n\n        console.log(\"\".concat(_user));\n        res.status(200).json({\n          token: service.createToken(_user),\n          user: {\n            name: _user.name,\n            last_name: _user.last_name,\n            cc: _user.cc,\n            dementia_stage: _user.dementia_stage,\n            adress: _user.adress,\n            birthdate: _user.birthdate\n          }\n        });\n      });\n    } else {\n      return res.status(400).json({\n        cc: \"Ya existe un usuario asociado a la identificación\"\n      });\n    }\n  });\n};\n\nexports.login = function (req, res) {\n  var _validateLoginInput = validateLoginInput(req.body),\n      errors = _validateLoginInput.errors,\n      isValid = _validateLoginInput.isValid; //Check validation\n\n\n  if (!isValid) {\n    return res.status(400).json(errors);\n  }\n\n  User.findOne({\n    cc: req.body.cc\n  }).then(function (user, err) {\n    if (err) return res.status(500).send({\n      message: err\n    });\n    if (!user) return res.status(404).send({\n      message: 'El usuario no existe, debe registrarse'\n    });\n    bcrypt.compare(req.body.password, user.password, function (err, isMatch) {\n      if (isMatch) {\n        req.user = user;\n        res.status(200).json({\n          token: service.createToken(user),\n          user: {\n            name: user.name,\n            last_name: user.last_name,\n            cc: user.cc,\n            dementia_stage: user.dementia_stage,\n            adress: user.adress,\n            birthdate: user.birthdate\n          },\n          message: 'Te has logueado correctamente'\n        });\n      } else {\n        return res.status(400).send({\n          passwordincorrect: 'Contraseña incorrecta'\n        });\n      }\n    });\n  })[\"catch\"](function (err) {\n    console.error(err);\n  });\n};\n\nexports.newAffectionAndUpdate = function (req, res) {\n  User.findOne({\n    _id: req.params.id\n  }).then(function (user, err) {\n    var newAffectiveRelation = new AffectiveRelation({\n      name: req.body.name,\n      last_name: req.body.last_name,\n      relationship: req.body.relationship,\n      user: user._id\n    });\n    newAffectiveRelation.save(function (err) {\n      if (err) {\n        return res.status(400).send({\n          message: \"Error adding affective relation \".concat(err)\n        });\n      }\n\n      res.status(200).send(\"\".concat(newAffectiveRelation));\n    });\n    user.affectiveRelation.push(newAffectiveRelation);\n    user.save();\n  })[\"catch\"](function (err) {\n    console.error(err);\n  });\n};\n\nexports.newQuestion = function (req, res) {\n  User.findOne({\n    cc: req.params.cc\n  }).then(function (user, err) {\n    var newQuestion = new Question({\n      question: req.body.question,\n      answer: req.body.answer,\n      optionalAnswerOne: req.body.optionalAnswerOne,\n      optionalAnswerTwo: req.body.optionalAnswerTwo,\n      kind: req.body.kind,\n      score: req.body.score,\n      user: user._id\n    });\n    newQuestion.save(function (err) {\n      if (err) {\n        return res.status(400).send({\n          message: \"Error adding affective relation \".concat(err)\n        });\n      }\n\n      res.status(200).send(\"\".concat(newQuestion));\n    });\n    user.question.push(newQuestion);\n    user.save();\n  })[\"catch\"](function (err) {\n    console.error(err);\n  });\n};\n\nexports.newSessionTherapy = function (req, res) {\n  User.findOne({\n    cc: req.params.cc\n  }).then(function (user, err) {\n    var newSessionTherapy = new SessionTherapy({\n      sessionDate: req.body.sessionDate,\n      minutesDuration: req.body.minutesDuration,\n      user: user._id\n    });\n    newSessionTherapy.save(function (err) {\n      if (err) {\n        return res.status(400).send({\n          message: \"Error adding affective relation \".concat(err)\n        });\n      }\n\n      res.status(200).send({\n        message: \"sucess\"\n      });\n    });\n    user.sessionTherapy.push(newSessionTherapy);\n    user.save();\n  })[\"catch\"](function (err) {\n    console.error(err);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}
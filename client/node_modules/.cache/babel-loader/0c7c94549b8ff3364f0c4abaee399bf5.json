{"ast":null,"code":"import _objectWithoutProperties from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/views/LoginPage/LoginPage.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Fingerprint from \"@material-ui/icons/Fingerprint\"; // core components\n\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\"; //Notifications component\n\nimport { NotificationContainer, NotificationManager } from 'react-notifications'; //Style for the page\n\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\"; //Image font\n\nimport image from \"assets/img/cute.jpeg\"; //Redux\n\nimport { connect } from \"react-redux\"; //Front and backend\n\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\"; //React router for wrapping the page\n\nimport { withRouter } from \"react-router-dom\";\nimport { GET_ERRORS } from \"actions/types\";\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginPage, _React$Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props)); // we use this to make the card to appear after the page has been rendered\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var userData = {\n        cc: _this.state.cc,\n        password: _this.state.password\n      };\n\n      var prueba = _this.props.loginUser(userData);\n\n      if (prueba.type == GET_ERRORS) {\n        console.log;\n      }\n    };\n\n    _this.createNotification = function (type) {\n      return function () {\n        switch (type) {\n          case 'info':\n            NotificationManager.info('Info message');\n            break;\n\n          case 'success':\n            console.log(\"holaaa\");\n            NotificationManager.success('Success message', 'Title here');\n            break;\n\n          case 'warning':\n            NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n            break;\n\n          case 'error':\n            NotificationManager.error('Error message', 'Click me!', 5000, function () {\n              alert('callback');\n            });\n            break;\n        }\n      };\n    };\n\n    _this.state = {\n      cardAnimaton: \"cardHidden\",\n      cc: \"\",\n      password: \"\",\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n      setTimeout(function () {\n        this.setState({\n          cardAnimaton: \"\"\n        });\n      }.bind(this), 700);\n\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/profile-page\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/profile-page\"); // push user to dashboard when they login\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          errors = _this$props.errors,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"errors\"]);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        absolute: true\n        /* color=\"transparent\"*/\n        ,\n        brand: \"Memento\",\n        rightLinks: React.createElement(HeaderLinks, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.pageHeader,\n        style: {\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes[this.state.cardAnimaton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"info\",\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Inicia sesi\\xF3n\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        value: this.state.cc,\n        labelText: \"C\\xE9dula de ciudadan\\xEDa\",\n        id: \"cc\",\n        className: classnames(\"\", {\n          invalid: errors.cc || errors.ccnotfound\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: this.onChange,\n          type: \"email\",\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, React.createElement(Fingerprint, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        value: this.state.pass,\n        labelText: \"Contrase\\xF1a\",\n        id: \"password\",\n        className: classnames(\"\", {\n          invalid: errors.pass || errors.passincorrect\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: this.onChange,\n          type: \"password\",\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, \"lock_outline\")),\n          autoComplete: \"off\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, errors.pass, errors.passincorrect)), React.createElement(CardFooter, {\n        className: classes.cardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Button, {\n        simple: true,\n        color: \"info\",\n        size: \"lg\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Iniciar terapia\"))))))), React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LoginPage;\n}(React.Component);\n\nLoginPage.propTypes = {\n  classes: PropTypes.object,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser\n})(withStyles(loginPageStyle)(withRouter(LoginPage)));","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/views/LoginPage/LoginPage.jsx"],"names":["React","PropTypes","withStyles","InputAdornment","Icon","Fingerprint","Header","HeaderLinks","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","NotificationContainer","NotificationManager","loginPageStyle","image","connect","loginUser","classnames","withRouter","GET_ERRORS","LoginPage","props","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","cc","state","password","prueba","type","console","log","createNotification","info","success","warning","error","alert","cardAnimaton","errors","setTimeout","bind","auth","isAuthenticated","history","push","nextProps","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","invalid","ccnotfound","fullWidth","endAdornment","inputIconsColor","pass","passincorrect","autoComplete","cardFooter","Component","propTypes","object","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\n// core components\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\n\n//Notifications component\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\n//Style for the page\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\";\n\n//Image font\nimport image from \"assets/img/cute.jpeg\";\n\n//Redux\nimport { connect } from \"react-redux\";\n\n//Front and backend\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n//React router for wrapping the page\nimport { withRouter } from \"react-router-dom\";\nimport { GET_ERRORS } from \"actions/types\";\n\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    // we use this to make the card to appear after the page has been rendered\n    this.state = {\n      cardAnimaton: \"cardHidden\",\n      cc: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n    setTimeout(\n      function() {\n        this.setState({ cardAnimaton: \"\" });\n      }.bind(this),\n      700\n    );\n\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/profile-page\");\n    }\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/profile-page\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n  \n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault(); \n    \n    const userData = {\n      cc: this.state.cc,\n      password: this.state.password,\n    };\n\n    let prueba = this.props.loginUser(userData);\n    if(prueba.type == GET_ERRORS){\n      console.log\n    }\n    \n  };\n\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          console.log(\"holaaa\");\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  };\n  \n  render() {\n    const { classes, errors, ...rest } = this.props;\n\n    return (\n      <div>\n        <Header\n          absolute\n         /* color=\"transparent\"*/\n          brand=\"Memento\"\n          rightLinks={<HeaderLinks />}\n          {...rest}\n        />\n        <div\n          className={classes.pageHeader}\n          style={{\n            backgroundImage: \"url(\" + image + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"top center\",\n          }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={4}>\n                <Card className={classes[this.state.cardAnimaton]}>\n                  <form className={classes.form}  noValidate onSubmit={this.onSubmit}>\n                    <CardHeader color=\"info\" className={classes.cardHeader}>\n                      <h4>Inicia sesión</h4>\n                    </CardHeader>\n                    <CardBody>\n                    <CustomInput\n                        value={this.state.cc}\n                        labelText=\"Cédula de ciudadanía\"\n                        id=\"cc\"\n                        className={classnames(\"\", {\n                          invalid: errors.cc || errors.ccnotfound\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: this.onChange,\n                          type: \"email\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Fingerprint className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                    \n                    <CustomInput\n                        value={this.state.pass}\n                        labelText=\"Contraseña\"\n                        id=\"password\"\n                        className={classnames(\"\", {\n                          invalid: errors.pass || errors.passincorrect\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: this.onChange,\n                          type: \"password\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputIconsColor}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          ),\n                          autoComplete: \"off\"\n                        }}\n                       />\n                      <span className=\"red-text\">\n                      {errors.pass}\n                      {errors.passincorrect}\n                      </span>\n\n                    {/* <InputSelect></InputSelect> */}\n                    </CardBody>\n                    <CardFooter className={classes.cardFooter}>\n                      <Button\n                      simple color=\"info\" \n                      size=\"lg\"\n                      type=\"submit\"\n                      >\n                        Iniciar terapia\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n\n            \n          </div>\n          <NotificationContainer/>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  classes: PropTypes.object,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser })(withStyles(loginPageStyle)(withRouter(LoginPage)));\n"]},"metadata":{},"sourceType":"module"}
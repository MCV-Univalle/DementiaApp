{"ast":null,"code":"import _objectWithoutProperties from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/views/RegisterPage/RegisterPage.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Location from \"@material-ui/icons/LocationOn\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\"; // core components\n\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport RadioInput from \"components/CustomInput/RadioInput.jsx\"; // react plugin for creating date-time-picker\n\nimport Datetime from \"react-datetime\";\nimport FormControl from \"@material-ui/core/FormControl\"; //Quitar de aqu√≠ -------------------------\n//Styles of login using in  the page too\n\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\"; //Font of the page\n\nimport image from \"assets/img/cute.jpeg\"; //Connection with redux\n\nimport { connect } from \"react-redux\"; //\n\nimport { registerUser } from \"../../actions/authActions\"; //React router for wrapping the page\n\nimport { Link, withRouter } from \"react-router-dom\"; //classnames\n\nimport classnames from \"classnames\";\n\nvar RegisterPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterPage, _React$Component);\n\n  function RegisterPage(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterPage).call(this, props)); // we use this to make the card to appear after the page has been rendered\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var newUser = {\n        name: _this.state.name,\n        last_name: _this.state.email,\n        cc: _this.state.cc,\n        adress: _this.state.adress,\n        phone: _this.state.phone,\n        password: _this.state.password,\n        demential_stage: _this.state.demential_stage,\n        date: _this.state.date\n      };\n      console.log(newUser); //this.props.registerUser(newUser, this.props.history); \n    };\n\n    _this.state = {\n      cardAnimaton: \"cardHidden\",\n      first_name: \"\",\n      last_name: \"\",\n      cc: \"\",\n      adress: \"\",\n      phone: \"\",\n      password: \"\",\n      demential_stage: [],\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(RegisterPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n      setTimeout(function () {\n        this.setState({\n          cardAnimaton: \"\"\n        });\n      }.bind(this), 700);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          errors = _this$props.errors,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"errors\"]);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        absolute: true\n        /* color=\"transparent\"*/\n        ,\n        brand: \"Memento\",\n        rightLinks: React.createElement(HeaderLinks, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.pageHeader,\n        style: {\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes[this.state.cardAnimaton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"info\",\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Registrate\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Informaci\\xF3n basica\"), React.createElement(CustomInput, {\n        value: this.state.name,\n        labelText: \"Nombre(s)\",\n        id: \"first\",\n        onChange: this.onChange,\n        error: errors.name,\n        className: classnames(\"\", {\n          invalid: errors.name\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"text\",\n          onChange: this.onChange,\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(Person, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, errors.name), React.createElement(CustomInput, {\n        value: this.state.last_name,\n        labelText: \"Apellido\",\n        id: \"lastName\",\n        error: errors.last_name,\n        formControlProps: {\n          fullWidth: true\n        },\n        className: classnames(\"\", {\n          invalid: errors.last_name\n        }),\n        inputProps: {\n          type: \"text\",\n          onChange: this.onChange,\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, React.createElement(Person, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, errors.last_name), React.createElement(CustomInput, {\n        value: this.state.cc,\n        labelText: \"C\\xE9dula de ciudadan\\xEDa\",\n        id: \"cc\",\n        className: classnames(\"\", {\n          invalid: errors.cc\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"email\",\n          onChange: this.onChange,\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, React.createElement(Fingerprint, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, errors.emailnotfound, errors.cc), React.createElement(CustomInput, {\n        value: this.state.adress,\n        labelText: \"Direcci\\xF3n\",\n        id: \"adress\",\n        className: classnames(\"\", {\n          invalid: errors.adress\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"text\",\n          onChange: this.onChange,\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, React.createElement(Location, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, errors.adress), React.createElement(CustomInput, {\n        value: this.state.phone,\n        labelText: \"Telefono\",\n        phone: true,\n        id: \"phone\",\n        className: classnames(\"\", {\n          invalid: errors.phone\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"text\",\n          onChange: this.onChange,\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, React.createElement(Phone, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, errors.phone), React.createElement(CustomInput, {\n        value: this.state.pass,\n        labelText: \"Contrase\\xF1a\",\n        id: \"pass\",\n        className: classnames(\"\", {\n          invalid: errors.pass\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"password\",\n          onChange: this.onChange,\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }, \"lock_outline\")),\n          autoComplete: \"off\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, errors.pass), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Datetime, {\n        value: this.state.date,\n        timeFormat: false,\n        className: classnames(\"\", {\n          invalid: errors.date\n        }),\n        inputProps: {\n          onChange: this.onChange,\n          placeholder: \"Fecha de nacimiento\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, errors.name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Estado de la demencia\"), React.createElement(RadioInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        className: classes.cardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Button, {\n        simple: true,\n        color: \"info\",\n        size: \"lg\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Registrar paciente\")))))))));\n    }\n  }]);\n\n  return RegisterPage;\n}(React.Component);\n\nRegisterPage.propTypes = {\n  classes: PropTypes.object,\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withStyles(loginPageStyle)(withRouter(RegisterPage)));","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/views/RegisterPage/RegisterPage.jsx"],"names":["React","PropTypes","withStyles","InputAdornment","Icon","Person","Phone","Location","Fingerprint","Header","HeaderLinks","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","RadioInput","Datetime","FormControl","loginPageStyle","image","connect","registerUser","Link","withRouter","classnames","RegisterPage","props","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","last_name","email","cc","adress","phone","password","demential_stage","date","console","log","cardAnimaton","first_name","errors","nextProps","setTimeout","bind","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","invalid","fullWidth","type","endAdornment","inputIconsColor","emailnotfound","pass","autoComplete","placeholder","cardFooter","Component","propTypes","object","func","isRequired","auth","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Location from \"@material-ui/icons/LocationOn\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\n// core components\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport RadioInput from \"components/CustomInput/RadioInput.jsx\";\n// react plugin for creating date-time-picker\nimport Datetime from \"react-datetime\";\n\nimport FormControl from \"@material-ui/core/FormControl\";//Quitar de aqu√≠ -------------------------\n//Styles of login using in  the page too\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\";\n//Font of the page\nimport image from \"assets/img/cute.jpeg\";\n//Connection with redux\nimport { connect } from \"react-redux\";\n//\nimport { registerUser } from \"../../actions/authActions\";\n//React router for wrapping the page\nimport { Link, withRouter } from \"react-router-dom\";\n//classnames\nimport classnames from \"classnames\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    // we use this to make the card to appear after the page has been rendered\n    this.state = {\n      cardAnimaton: \"cardHidden\",\n      first_name: \"\",\n      last_name: \"\",\n      cc: \"\",\n      adress: \"\",\n      phone: \"\",\n      password: \"\",\n      demential_stage: [],\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n    setTimeout(\n      function() {\n        this.setState({ cardAnimaton: \"\" });\n      }.bind(this),\n      700\n    );\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault(); \n    \n    const newUser = {\n      name: this.state.name,\n      last_name: this.state.email,\n      cc: this.state.cc,\n      adress: this.state.adress,\n      phone: this.state.phone,\n      password: this.state.password,\n      demential_stage: this.state.demential_stage,\n      date: this.state.date\n    };\n    \n    console.log(newUser);\n    //this.props.registerUser(newUser, this.props.history); \n\n  };\n  \n  render() {\n    const { classes, errors, ...rest } = this.props;\n\n    return (\n      <div>\n        <Header\n          absolute\n         /* color=\"transparent\"*/\n          brand=\"Memento\"\n          rightLinks={<HeaderLinks />}\n          {...rest}\n        />\n        <div\n          className={classes.pageHeader}\n          style={{\n            backgroundImage: \"url(\" + image + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"top center\",\n          }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={4}>\n                <Card className={classes[this.state.cardAnimaton]}>\n                  <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                    <CardHeader color=\"info\" className={classes.cardHeader}>\n                      <h4>Registrate</h4>\n                    </CardHeader>\n                    <CardBody>\n                    <h4>Informaci√≥n basica</h4>\n                      <CustomInput\n                        value={this.state.name}\n                        labelText=\"Nombre(s)\"\n                        id=\"first\"\n                        onChange={this.onChange}\n                        error={errors.name}\n                        className={classnames(\"\", {\n                          invalid: errors.name\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"text\",\n                          onChange: this.onChange,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Person className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <span className=\"red-text\">{errors.name}</span>\n                      <CustomInput\n                        value={this.state.last_name}\n                        labelText=\"Apellido\"\n                        id=\"lastName\"\n                        error={errors.last_name}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        className={classnames(\"\", {\n                          invalid: errors.last_name\n                        })}\n                        inputProps={{\n                          type: \"text\",\n                          onChange: this.onChange,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Person className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <span className=\"red-text\">{errors.last_name}</span>\n                      <CustomInput\n                        value={this.state.cc}\n                        labelText=\"C√©dula de ciudadan√≠a\"\n                        id=\"cc\"\n                        className={classnames(\"\", {\n                          invalid: errors.cc\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"email\",\n                          onChange: this.onChange,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Fingerprint className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <span className=\"red-text\">\n                      {errors.emailnotfound}\n                      {errors.cc}\n                      </span>\n                      <CustomInput\n                        value={this.state.adress}\n                        labelText=\"Direcci√≥n\"\n                        id=\"adress\"\n                        className={classnames(\"\", {\n                          invalid: errors.adress\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"text\",\n                          onChange: this.onChange,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Location className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <span className=\"red-text\">{errors.adress}</span>\n                      <CustomInput\n                        value={this.state.phone}\n                        labelText=\"Telefono\"phone\n                        id=\"phone\"\n                        className={classnames(\"\", {\n                          invalid: errors.phone\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"text\",\n                          onChange: this.onChange,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Phone className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <span className=\"red-text\">{errors.phone}</span>\n                      <CustomInput\n                        value={this.state.pass}\n                        labelText=\"Contrase√±a\"\n                        id=\"pass\"\n                        className={classnames(\"\", {\n                          invalid: errors.pass\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"password\",\n                          onChange: this.onChange,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputIconsColor}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          ),\n                          autoComplete: \"off\"\n                        }}\n                       />\n                      <span className=\"red-text\">{errors.pass}</span>\n                      <br />\n                      <br />\n                      <FormControl fullWidth>\n                      <Datetime \n                        value={this.state.date}\n                        timeFormat={false}\n                        className={classnames(\"\", {\n                          invalid: errors.date\n                        })}\n                        inputProps={{\n                          onChange: this.onChange,\n                          placeholder: \"Fecha de nacimiento\",\n                        }}\n                      />\n                      <span className=\"red-text\">{errors.name}</span>\n                      <br />\n                      <br />\n                      </FormControl>\n                      \n                      <h4>Estado de la demencia</h4>\n                      \n                      <RadioInput></RadioInput>\n\n                    </CardBody>\n                    <CardFooter className={classes.cardFooter}>\n                      <Button \n                      simple color=\"info\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      >\n                        Registrar paciente\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterPage.propTypes = {\n  classes: PropTypes.object,\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n\nexport default connect(\n  mapStateToProps,\n  { registerUser })(withStyles(loginPageStyle)(withRouter(RegisterPage)));"]},"metadata":{},"sourceType":"module"}
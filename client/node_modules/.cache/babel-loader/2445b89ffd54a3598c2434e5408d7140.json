{"ast":null,"code":"var mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\n\nvar AffectiveRelation = require('./affectiveRelation.model');\n\nvar SessionTherapy = require('./sessionTherapy.model');\n\nvar bcrypt = require('bcrypt');\n\nvar UserSchema = new Schema({\n  name: {\n    type: String,\n    required: true,\n    max: 30\n  },\n  last_name: {\n    type: String,\n    required: true,\n    max: 30\n  },\n  password: {\n    type: String\n  },\n  birthdate: {\n    type: Date,\n    required: true\n  },\n  cc: {\n    type: Number,\n    required: true,\n    useCreateIndex: true\n  },\n  adress: {\n    type: String,\n    required: true,\n    max: 15\n  },\n  signup_Date: {\n    type: Date,\n    \"default\": Date.now\n  },\n  last_login: Date,\n  dementia_stage: {\n    type: String,\n    \"enum\": ['Inicial', 'Moderada'],\n    required: true\n  },\n  sessionTime: Number,\n  affectiveRelation: [{\n    type: Schema.Types.ObjectId,\n    ref: \"AffectiveRelation\"\n  }],\n  question: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Question\"\n  }],\n  sessionTherapy: [{\n    type: Schema.Types.ObjectId,\n    ref: \"SessionTherapy\"\n  }]\n}); //This function is executed before saving the data, that is why the name is \"pre\"\n\nUserSchema.pre('save', function (next) {\n  var user = this;\n  console.log(\"\".concat(user));\n  if (!user.isModified('password')) return next();\n  bcrypt.genSalt(10, function (err, salt) {\n    if (err) return next(err);\n    bcrypt.hash(user.password, salt, function (err, hash) {\n      if (err) return next(err); //Case where dosn't exist a mistake, so the hash that I've created now is the user.password\n\n      user.password = hash;\n      next();\n    });\n  });\n}); // Export the model\n\nmodule.exports = mongoose.model('User', UserSchema);","map":null,"metadata":{},"sourceType":"script"}
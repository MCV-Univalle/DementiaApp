{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register User\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/user/create\", userData).then(function (res) {\n      return history.push(\"/login\");\n    }) // re-direct to login on successful register\n    [\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"/user/login\", userData).then(function (res) {\n      console.log(res);\n\n      if (res.token === null) {}\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n    setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","err","type","payload","response","data","loginUser","console","log","token","setCurrentUser","decoded","setUserLoading","logoutUser","localStorage","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,YAHF,QAIO,SAJP,C,CAOA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC7DT,IAAAA,KAAK,CACFU,IADH,CACQ,cADR,EACwBH,QADxB,EAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KAFX,EAEuC;AAFvC,cAGS,UAAAC,GAAG;AAAA,aACRL,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEZ,UADC;AAEPa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CADA;AAAA,KAHZ;AASD,GAV2B;AAAA,CAArB,C,CAWP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAZ,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC/CT,IAAAA,KAAK,CACFU,IADH,CACQ,aADR,EACuBH,QADvB,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;;AACA,UAAGA,GAAG,CAACU,KAAJ,KAAY,IAAf,EAAoB,CAEnB;AAEF,KARH,WASS,UAAAR,GAAG;AAAA,aACRL,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEZ,UADC;AAEPa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CADA;AAAA,KATZ;AAeD,GAhBgC;AAAA,CAA1B,C,CAiBP;;AACA,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO,EAAI;AACvC,SAAO;AACLT,IAAAA,IAAI,EAAEX,gBADD;AAELY,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO;AACLV,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM,C,CAKP;;AACA,OAAO,IAAMqB,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAjB,QAAQ,EAAI;AAC1C;AACAkB,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB,EAF0C,CAG1C;;AACA3B,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ0C,CAK1C;;AACAQ,IAAAA,QAAQ,CAACc,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAPyB;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/user/create\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/user/login\", userData)\n    .then(res => {\n      console.log(res)\n      if(res.token===null){\n\n      }\n      \n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}
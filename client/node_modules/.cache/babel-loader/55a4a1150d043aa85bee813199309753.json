{"ast":null,"code":"import _classCallCheck from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/views/AlbumPersonPage/Sections/PersonSection.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // @material-ui/icons\n\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\nimport LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined'; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport NavPills from \"components/NavPills/NavPills.jsx\"; //React router for wrapping the page\n\nimport { withRouter } from \"react-router-dom\";\nimport { setActualAlbumPerson } from \"../../../actions/relationAction\";\nimport { connect } from \"react-redux\";\nimport { albumPersonStyle, navPillsStyle } from \"assets/jss/material-kit-react/views/landingPageSections/albumPersonStyle\"; // react components for routing our app without refresh\n\nimport { Link } from \"react-router-dom\";\nimport { fetchRelations } from \"../../../actions/relationAction\";\n\nvar PersonSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersonSection, _React$Component);\n\n  function PersonSection() {\n    _classCallCheck(this, PersonSection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PersonSection).apply(this, arguments));\n  }\n\n  _createClass(PersonSection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchRelations(this.props.auth.user.sub);\n      console.log(this.props.fetchRelations(this.props.auth.user.sub));\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons(name, key) {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this.props.onTodoClick(name);\n        },\n        component: Link,\n        style: {\n          display: \"block\",\n          marginLeft: \"300px\"\n        },\n        color: \"success\",\n        size: \"lg\",\n        to: \"/select-view-album-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, name));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var relations = this.props.relations.relations;\n      console.log(relations);\n      relations.map(function (relation, key) {\n        if (relation.photo.length) {\n          return console.log(relation.name, relation.photo.length, key);\n        }\n      });\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.section,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        className: classes.textCenter,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\xBFSobre qui\\xE9n quieres trabajar hoy?\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(NavPills, {\n        color: \"rose\",\n        horizontal: {\n          tabsGrid: {\n            xs: 12,\n            sm: 4,\n            md: 4\n          },\n          contentGrid: {\n            xs: 12,\n            sm: 8,\n            md: 8\n          }\n        },\n        tabs: [{\n          tabButton: \"Familia\",\n          tabIcon: FavoriteBorderOutlinedIcon,\n          tabContent: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, relations.map(function (relation, key) {\n            if (relation.photo.length && !relation.relationship.includes(\"Amig\") && !relation.relationship.includes(\"Cuidador\")) {\n              return _this2.renderButtons(relation.relationship + \" \" + relation.name, key);\n            }\n          }))\n        }, {\n          tabButton: \"Amigos\",\n          tabIcon: LoyaltyOutlinedIcon,\n          tabContent: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, relations.map(function (relation, key) {\n            if (relation.photo.length && relation.relationship.includes(\"Amig\")) {\n              return _this2.renderButtons(relation.relationship + \" \" + relation.name, key);\n            }\n          }))\n        }, {\n          tabButton: \"Cuidadores\",\n          tabIcon: LocalHospitalOutlinedIcon,\n          tabContent: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, relations.map(function (relation, key) {\n            if (relation.photo.length && relation.relationship.includes(\"Cuidador\")) {\n              return _this2.renderButtons(relation.relationship + \" \" + relation.name, key);\n            }\n          }))\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return PersonSection;\n}(React.Component);\n\nPersonSection.propTypes = {\n  classes: PropTypes.object,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    relations: state.relations\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onTodoClick: function onTodoClick(name) {\n      console.log(\"por ac√° llego\" + name);\n      dispatch(setActualAlbumPerson(name));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchRelations: fetchRelations\n}, mapDispatchToProps)(withStyles(albumPersonStyle)(withRouter(PersonSection)));","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/views/AlbumPersonPage/Sections/PersonSection.jsx"],"names":["React","PropTypes","withStyles","FavoriteBorderOutlinedIcon","LoyaltyOutlinedIcon","LocalHospitalOutlinedIcon","GridContainer","GridItem","Button","NavPills","withRouter","setActualAlbumPerson","connect","albumPersonStyle","navPillsStyle","Link","fetchRelations","PersonSection","props","auth","user","sub","console","log","name","key","onTodoClick","display","marginLeft","relations","map","relation","photo","length","classes","section","container","textCenter","title","tabsGrid","xs","sm","md","contentGrid","tabButton","tabIcon","tabContent","relationship","includes","renderButtons","Component","propTypes","object","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// @material-ui/icons\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\nimport LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined';\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport NavPills from \"components/NavPills/NavPills.jsx\";\n\n//React router for wrapping the page\nimport { withRouter } from \"react-router-dom\";\nimport { setActualAlbumPerson } from \"../../../actions/relationAction\";\n\nimport { connect } from \"react-redux\";\n\nimport {albumPersonStyle, navPillsStyle} from \"assets/jss/material-kit-react/views/landingPageSections/albumPersonStyle\";\n\n// react components for routing our app without refresh\nimport { Link } from \"react-router-dom\";\n\nimport { fetchRelations } from \"../../../actions/relationAction\";\n\nclass PersonSection extends React.Component { \n\n  componentDidMount(){\n    this.props.fetchRelations(this.props.auth.user.sub);\n    console.log(this.props.fetchRelations(this.props.auth.user.sub));\n  }\n\n  renderButtons(name,key){\n    return <div key={key}>\n        <Button\n          onClick={() => this.props.onTodoClick(name)}\n          component={Link}\n          style={{display: \"block\", marginLeft: \"300px\"}}\n          color=\"success\"\n          size=\"lg\"\n          to=\"/select-view-album-page\"\n        >\n        {name}\n        </Button>\n      </div>\n  }\n\n  render() {\n    const {relations} = this.props.relations;\n    console.log(relations);\n    relations.map((relation,key)=>{\n      if(relation.photo.length){\n      return console.log(relation.name, relation.photo.length, key);\n      }\n    }\n  )\n    const { classes } = this.props;\n    return (\n      <div className={classes.section}>\n      <div className={classes.container}>\n        <GridContainer className={classes.textCenter} justify=\"center\">\n          <GridItem xs={12} sm={12} md={8}>\n            <h2 className={classes.title}>¬øSobre qui√©n quieres trabajar hoy?</h2>\n            \n          </GridItem>\n          <GridItem xs={12} sm={12} md={12}>\n                <NavPills\n                  color=\"rose\"\n                  horizontal={{\n                    tabsGrid: { xs: 12, sm: 4, md: 4 },\n                    contentGrid: { xs: 12, sm: 8, md: 8 }\n                  }}\n                  tabs={[\n                    {\n                      tabButton: \"Familia\",\n                      tabIcon: FavoriteBorderOutlinedIcon,\n                      tabContent: (\n                        <span>\n\n                        {relations.map((relation,key)=>{\n                          if((relation.photo.length)&&!(relation.relationship.includes(\"Amig\"))&&\n                          !(relation.relationship.includes(\"Cuidador\"))){\n                            return this.renderButtons(relation.relationship + \" \" + relation.name, key);\n                          }\n                        })\n                        }\n                          \n                        </span>\n                      )\n                    },\n                    {\n                      tabButton: \"Amigos\",\n                      tabIcon: LoyaltyOutlinedIcon,\n                      tabContent: (\n                        <span>\n\n                          {relations.map((relation,key)=>{\n                          if((relation.photo.length)&&(relation.relationship.includes(\"Amig\"))){\n                            return this.renderButtons(relation.relationship + \" \" + relation.name, key);\n                          }\n                        })\n                        }\n\n                        </span>\n                      )\n                    },\n                    {\n                      tabButton: \"Cuidadores\",\n                      tabIcon: LocalHospitalOutlinedIcon,\n                      tabContent: (\n                        <span>\n\n                          {relations.map((relation,key)=>{\n                          if((relation.photo.length)&&(relation.relationship.includes(\"Cuidador\"))){\n                            return this.renderButtons(relation.relationship + \" \" + relation.name, key);\n                          }\n                        })\n                        }\n\n                        </span>\n                      )\n                    }\n                  ]}\n                />\n              </GridItem>\n        </GridContainer>\n        </div>\n        </div>\n    );\n  }\n}\n\nPersonSection.propTypes = {\n  classes: PropTypes.object,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  relations: state.relations,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTodoClick: (name) => {\n      console.log(\"por ac√° llego\" + name);\n      dispatch(setActualAlbumPerson(name))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {fetchRelations }, mapDispatchToProps) (withStyles(albumPersonStyle)(withRouter(PersonSection)));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/views/ActivitiesPage/ActivitiesPage.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Fingerprint from \"@material-ui/icons/Fingerprint\"; // core components\n\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\"; //Notifications component\n\nimport { NotificationContainer, NotificationManager } from 'react-notifications'; //Style for the page\n\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\"; //Image font\n\nimport image from \"assets/img/cute.jpeg\"; //Redux\n\nimport { connect } from \"react-redux\"; //Front and backend\n\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\"; //React router for wrapping the page\n\nimport { withRouter } from \"react-router-dom\";\nimport { GET_ERRORS } from \"actions/types\";\n\nvar ActivitiesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActivitiesPage, _React$Component);\n\n  function ActivitiesPage(props) {\n    var _this;\n\n    _classCallCheck(this, ActivitiesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActivitiesPage).call(this, props)); // we use this to make the card to appear after the page has been rendered\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var userData = {\n        cc: _this.state.cc,\n        password: _this.state.password\n      };\n\n      var prueba = _this.props.loginUser(userData);\n\n      console.log(prueba);\n    };\n\n    _this.state = {\n      cardAnimaton: \"cardHidden\"\n    };\n    return _this;\n  }\n\n  _createClass(ActivitiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n      setTimeout(function () {\n        this.setState({\n          cardAnimaton: \"\"\n        });\n      }.bind(this), 700);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/profile-page\"); // push user to dashboard when they login\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          errors = _this$props.errors,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"errors\"]);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        absolute: true\n        /* color=\"transparent\"*/\n        ,\n        brand: \"Memento\",\n        rightLinks: React.createElement(HeaderLinks, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.pageHeader,\n        style: {\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes[this.state.cardAnimaton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(CardFooter, {\n        className: classes.cardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Large\")))))), React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ActivitiesPage;\n}(React.Component);\n\nActivitiesPage.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(loginPageStyle)(ActivitiesPage);","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/views/ActivitiesPage/ActivitiesPage.jsx"],"names":["React","PropTypes","withStyles","InputAdornment","Icon","Fingerprint","Header","HeaderLinks","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","NotificationContainer","NotificationManager","loginPageStyle","image","connect","loginUser","classnames","withRouter","GET_ERRORS","ActivitiesPage","props","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","cc","state","password","prueba","console","log","cardAnimaton","setTimeout","bind","nextProps","auth","isAuthenticated","history","push","errors","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","cardFooter","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\n// core components\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\n\n//Notifications component\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\n//Style for the page\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\";\n\n//Image font\nimport image from \"assets/img/cute.jpeg\";\n\n//Redux\nimport { connect } from \"react-redux\";\n\n//Front and backend\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n//React router for wrapping the page\nimport { withRouter } from \"react-router-dom\";\nimport { GET_ERRORS } from \"actions/types\";\n\n\nclass ActivitiesPage extends React.Component {\n  constructor(props) {\n    super(props);\n    // we use this to make the card to appear after the page has been rendered\n\n    this.state = {\n      cardAnimaton: \"cardHidden\",\n    }\n\n  }\n  componentDidMount() {\n    // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n    setTimeout(\n      function() {\n        this.setState({ cardAnimaton: \"\" });\n      }.bind(this),\n      700\n    );\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/profile-page\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n  \n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault(); \n    \n    const userData = {\n      cc: this.state.cc,\n      password: this.state.password,\n    };\n\n    let prueba = this.props.loginUser(userData);\n    console.log(prueba);\n    \n  };\n\n\n  render() {\n    const { classes, errors, ...rest } = this.props;\n\n    return (\n      <div>\n        <Header\n          absolute\n         /* color=\"transparent\"*/\n          brand=\"Memento\"\n          rightLinks={<HeaderLinks />}\n          {...rest}\n        />\n        <div\n          className={classes.pageHeader}\n          style={{\n            backgroundImage: \"url(\" + image + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"top center\",\n          }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={4}>\n                <Card className={classes[this.state.cardAnimaton]}>\n                    \n                    <CardFooter className={classes.cardFooter}>\n                    \n\n                <Button color=\"primary\" size=\"lg\">\n                  Large\n                </Button>\n                    </CardFooter>\n                </Card>\n              </GridItem>\n            </GridContainer>\n\n            \n          </div>\n          <NotificationContainer/>\n        </div>\n      </div>\n    );\n  }\n}\n\nActivitiesPage.propTypes = {\n  classes: PropTypes.object,\n};\n\n\nexport default withStyles(loginPageStyle)(ActivitiesPage);"]},"metadata":{},"sourceType":"module"}
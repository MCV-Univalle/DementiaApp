{"ast":null,"code":"import _objectWithoutProperties from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/views/LoginPage/LoginPage.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Fingerprint from \"@material-ui/icons/Fingerprint\"; // core components\n\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\";\nimport image from \"assets/img/cute.jpeg\";\nimport CustomDropdown from \"components/CustomDropdown/CustomDropdown\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginPage, _React$Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props)); // we use this to make the card to appear after the page has been rendered\n\n    _this.handleUpdateClick = function () {\n      console.log(\"actualizado\");\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var userData = {\n        cc: _this.state.cc,\n        password: _this.state.password\n      };\n\n      _this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n\n\n      console.log(userData);\n\n      _this.props.registerUser(userData, _this.props.history);\n    };\n\n    _this.state = {\n      cardAnimaton: \"cardHidden\",\n      cc: \"\",\n      password: \"\",\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n      setTimeout(function () {\n        this.setState({\n          cardAnimaton: \"\"\n        });\n      }.bind(this), 700);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/profile\"); // push user to dashboard when they login\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        absolute: true\n        /* color=\"transparent\"*/\n        ,\n        brand: \"Memento\",\n        rightLinks: React.createElement(HeaderLinks, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.pageHeader,\n        style: {\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes[this.state.cardAnimaton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"info\",\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Inicia sesi\\xF3n\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        onChange: this.onChange,\n        value: this.state.cc,\n        labelText: \"C\\xE9dula de ciudadan\\xEDa\",\n        id: \"cc\",\n        className: classnames(\"\", {\n          invalid: errors.cc || errors.ccnotfound\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"email\",\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(Fingerprint, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        onChange: this.onChange,\n        value: this.state.pass,\n        labelText: \"Contrase\\xF1a\",\n        id: \"pass\",\n        className: classnames(\"\", {\n          invalid: errors.pass\n        }),\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"password\",\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            className: classes.inputIconsColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, \"lock_outline\")),\n          autoComplete: \"off\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, errors.pass, errors.passincorrect)), React.createElement(CardFooter, {\n        className: classes.cardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleUpdateClick,\n        simple: true,\n        color: \"info\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Iniciar terapia\"))))))), React.createElement(Footer, {\n        whiteFont: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LoginPage;\n}(React.Component);\n\nLoginPage.propTypes = {\n  classes: PropTypes.object,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser\n})(withStyles(loginPageStyle)(withRouter(LPage)));","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/views/LoginPage/LoginPage.jsx"],"names":["React","PropTypes","withStyles","InputAdornment","Icon","Fingerprint","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","loginPageStyle","image","CustomDropdown","connect","loginUser","classnames","LoginPage","props","handleUpdateClick","console","log","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","cc","state","password","registerUser","history","cardAnimaton","errors","setTimeout","bind","nextProps","auth","isAuthenticated","push","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","invalid","ccnotfound","fullWidth","type","endAdornment","inputIconsColor","pass","autoComplete","passincorrect","cardFooter","Component","propTypes","object","func","isRequired","mapStateToProps","withRouter","LPage"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\n// core components\nimport Header from \"components/Header/Header.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\n\n\nimport loginPageStyle from \"assets/jss/material-kit-react/views/loginPage.jsx\";\n\nimport image from \"assets/img/cute.jpeg\";\nimport CustomDropdown from \"components/CustomDropdown/CustomDropdown\";\n\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    // we use this to make the card to appear after the page has been rendered\n    this.state = {\n      cardAnimaton: \"cardHidden\",\n      cc: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n    setTimeout(\n      function() {\n        this.setState({ cardAnimaton: \"\" });\n      }.bind(this),\n      700\n    );\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/profile\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n  \n\n  handleUpdateClick = () => {\n    console.log(\"actualizado\");\n\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault(); \n    \n    const userData = {\n      cc: this.state.cc,\n      password: this.state.password,\n    };\n\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    \n    console.log(userData);\n    this.props.registerUser(userData, this.props.history); \n\n  };\n  \n  render() {\n    const { errors } = this.state;\n    const { classes, ...rest } = this.props;\n    return (\n      <div>\n        <Header\n          absolute\n         /* color=\"transparent\"*/\n          brand=\"Memento\"\n          rightLinks={<HeaderLinks />}\n          {...rest}\n        />\n        <div\n          className={classes.pageHeader}\n          style={{\n            backgroundImage: \"url(\" + image + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"top center\",\n          }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={4}>\n                <Card className={classes[this.state.cardAnimaton]}>\n                  <form className={classes.form}  noValidate onSubmit={this.onSubmit}>\n                    <CardHeader color=\"info\" className={classes.cardHeader}>\n                      <h4>Inicia sesión</h4>\n                    </CardHeader>\n                    <CardBody>\n                    <CustomInput\n                        onChange={this.onChange}\n                        value={this.state.cc}\n                        labelText=\"Cédula de ciudadanía\"\n                        id=\"cc\"\n                        className={classnames(\"\", {\n                          invalid: errors.cc || errors.ccnotfound\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"email\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Fingerprint className={classes.inputIconsColor} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                    \n                    <CustomInput\n                        onChange={this.onChange}\n                        value={this.state.pass}\n                        labelText=\"Contraseña\"\n                        id=\"pass\"\n                        className={classnames(\"\", {\n                          invalid: errors.pass\n                        })}\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          type: \"password\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputIconsColor}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          ),\n                          autoComplete: \"off\"\n                        }}\n                       />\n                      <span className=\"red-text\">\n                      {errors.pass}\n                      {errors.passincorrect}\n                      </span>\n\n                    {/* <InputSelect></InputSelect> */}\n                    </CardBody>\n                    <CardFooter className={classes.cardFooter}>\n                      <Button onClick={this.handleUpdateClick} simple color=\"info\" size=\"lg\">\n                        Iniciar terapia\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n          </div>\n          <Footer whiteFont />\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  classes: PropTypes.object,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser })(withStyles(loginPageStyle)(withRouter(LPage)));\n"]},"metadata":{},"sourceType":"module"}
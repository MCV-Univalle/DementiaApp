{"ast":null,"code":"var jwt = require('jwt-simple');\n\nvar moment = require('moment');\n\nvar secret = 'mi_clave_de_tokens';\n\ncreateToken = function createToken(user) {\n  var payload = {\n    sub: user._id,\n    //This part compromise the id of the database but it's faster to implement\n    iat: moment().unix(),\n    //Date of creation of the token\n    exp: moment().add(14, 'days').unix() //14 days to expire, starting with the creation date\n\n  };\n  return jwt.encode(payload, secret);\n};\n\ndecodeToken = function decodeToken(token) {\n  var decoded = new Promise(function (resolve, reject) {\n    try {\n      var payload = jwt.decode(token, secret);\n\n      if (payload.exp <= moment().unix()) {\n        reject({\n          status: 401,\n          message: 'token expired'\n        });\n      }\n\n      resolve(payload.sub);\n    } catch (err) {\n      reject({\n        status: 500,\n        message: 'Invalid token'\n      });\n    }\n  });\n  return decoded;\n};\n\nmodule.exports = {\n  createToken: createToken,\n  secret: \"secretToken\",\n  decodeToken: decodeToken\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _objectWithoutProperties from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathalia/Documentos/Memento/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathalia/Documentos/Memento/client/src/views/ProfilePage/ProfilePage.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { fetchQuestions } from \"../../actions/questionsAction\";\nimport { setCurrentUser } from \"../../actions/authActions\"; //React router for wrapping the page\n\nimport { withRouter } from \"react-router-dom\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Header from \"components/Header/Header.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport Parallax from \"components/Parallax/Parallax.jsx\";\nimport profile from \"assets/img/faces/oldPerson.jpg\";\nimport profilePageStyle from \"assets/jss/material-kit-react/views/profilePage.jsx\";\n\nvar ProfilePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfilePage, _React$Component);\n\n  function ProfilePage() {\n    _classCallCheck(this, ProfilePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfilePage).apply(this, arguments));\n  }\n\n  _createClass(ProfilePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.user);\n      this.props.fetchQuestions(this.props.auth.user.sub);\n    }\n  }, {\n    key: \"renderQuestion\",\n    value: function renderQuestion(question, key) {\n      return React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, question.question), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, question.answer));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      //const user = this.props.user;\n      //console.log(user)\n      var userData = this.props.auth.userData; //console.log(userData)\n\n      var questions = this.props.questions.questions; //console.log(questions);\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      var imageClasses = classNames(classes.imgRaised, classes.imgRoundedCircle, classes.imgFluid);\n      var navImageClasses = classNames(classes.imgRounded, classes.imgGallery);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header //color=\"transparent\"\n      , Object.assign({\n        brand: \"Memento\",\n        rightLinks: React.createElement(HeaderLinks, {\n          completed: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }),\n        fixed: true,\n        changeColorOnScroll: {\n          height: 300,\n          color: \"white\"\n        }\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(Parallax, {\n        filter: true,\n        small: true,\n        image: require(\"assets/img/profile-bg.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classNames(classes.main, classes.mainRaised),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: profile,\n        alt: \"...\",\n        className: imageClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", userData.name, \" \", userData.last_name), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Hola, soy \", userData.name, \", tengo 83 a\\xF1os. Nac\\xED en Cali, Valle del Cauca y resido en el barrio Antonio Nari\\xF1o\", questions.length != 0 ? questions[0].score : \"\", \" \"), questions.map(function (question, key) {\n        return _this.renderQuestion(question, key);\n      })))))))));\n    }\n  }]);\n\n  return ProfilePage;\n}(React.Component);\n\nProfilePage.propTypes = {\n  classes: PropTypes.object,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    questions: state.questions,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser: logoutUser,\n  fetchQuestions: fetchQuestions,\n  setCurrentUser: setCurrentUser\n})(withStyles(profilePageStyle)(withRouter(ProfilePage)));","map":{"version":3,"sources":["/home/nathalia/Documentos/Memento/client/src/views/ProfilePage/ProfilePage.jsx"],"names":["React","PropTypes","connect","logoutUser","fetchQuestions","setCurrentUser","withRouter","classNames","withStyles","Header","GridContainer","GridItem","HeaderLinks","Parallax","profile","profilePageStyle","ProfilePage","console","log","props","user","auth","sub","question","key","answer","userData","questions","classes","rest","imageClasses","imgRaised","imgRoundedCircle","imgFluid","navImageClasses","imgRounded","imgGallery","height","color","require","main","mainRaised","container","name","title","last_name","length","score","map","renderQuestion","Component","propTypes","object","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { fetchQuestions } from \"../../actions/questionsAction\";\nimport { setCurrentUser} from \"../../actions/authActions\"\n\n//React router for wrapping the page\nimport { withRouter } from \"react-router-dom\";\n\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport HeaderLinks from \"components/Header/HeaderLinks.jsx\";\nimport Parallax from \"components/Parallax/Parallax.jsx\";\n\nimport profile from \"assets/img/faces/oldPerson.jpg\";\n\n\n\nimport profilePageStyle from \"assets/jss/material-kit-react/views/profilePage.jsx\";\n\nclass ProfilePage extends React.Component {\n\n\ncomponentDidMount(){\n  console.log(this.props.user);\n  this.props.fetchQuestions(this.props.auth.user.sub);\n}\n\nrenderQuestion(question,key){\n  return <div key={key}>\n    <h5>{question.question}</h5>\n    <p>{question.answer}</p>\n    </div>\n}\n\n  render() {\n    //const user = this.props.user;\n    //console.log(user)\n    const { userData } = this.props.auth;\n    //console.log(userData)\n    const {questions} = this.props.questions;\n    //console.log(questions);\n    const { classes, ...rest } = this.props;\n    const imageClasses = classNames(\n      classes.imgRaised,\n      classes.imgRoundedCircle,\n      classes.imgFluid\n    );\n    const navImageClasses = classNames(classes.imgRounded, classes.imgGallery);\n    return (\n      <div>\n        <Header\n          //color=\"transparent\"\n          brand=\"Memento\"\n          rightLinks={<HeaderLinks completed={true}/>}\n          fixed\n          changeColorOnScroll={{\n            height: 300,\n            color: \"white\"\n          }}\n          {...rest}\n        />\n        <Parallax filter small image={require(\"assets/img/profile-bg.jpg\")} />\n        <div className={classNames(classes.main, classes.mainRaised)}>\n          <div>\n            <div className={classes.container}>\n              <GridContainer justify=\"center\">\n                <GridItem xs={12} sm={12} md={6}>\n                  <div className={classes.profile}>\n                    <div>\n                      <img src={profile} alt=\"...\" className={imageClasses} />\n                    </div>\n                    <div className={classes.name}>\n                      <h2 className={classes.title}> {userData.name} {userData.last_name}</h2>\n                      <h4>Hola, soy {userData.name}, tengo 83 años.\n                      Nací en Cali, Valle del Cauca y resido en el barrio Antonio Nariño\n                      \n                      {questions.length != 0 ? questions[0].score : \"\"} </h4>\n                      {questions.map((question,key)=>{\n                        return this.renderQuestion(question,key);\n                      })}\n                    </div>\n                  </div>\n                </GridItem>\n              </GridContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfilePage.propTypes = {\n  classes: PropTypes.object,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  questions: state.questions,\n  user: state.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser,fetchQuestions, setCurrentUser}) (withStyles(profilePageStyle)(withRouter(ProfilePage)));\n"]},"metadata":{},"sourceType":"module"}